{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["City","props","id","className","data","LocationText","class","State","Lat","Long","EstimatedPopulation","TotalWages","ZipCodeSearch","htmlFor","type","value","zipValue","onChange","handleChange","App","state","zipCodeValue","cities","zipCodeChange","bind","event","zip","target","this","setState","length","fetch","then","response","ok","json","jsonResponse","map","city","RecordNumber","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6QAGA,SAASA,EAAKC,GACZ,OACE,qBAAKC,GAAG,WAAR,SACI,sBAAKA,GAAG,YAAR,UACA,oBAAIC,UAAU,QAAd,SAAuBF,EAAMG,KAAKC,eAClC,qBAAIC,MAAM,aAAV,UACI,yCAAYL,EAAMG,KAAKG,SACvB,6CAAgBN,EAAMG,KAAKI,IAA3B,KAAkCP,EAAMG,KAAKK,KAA7C,OACA,0DAA6BR,EAAMG,KAAKM,uBACxC,+CAAkBT,EAAMG,KAAKO,sBAOzC,SAASC,EAAcX,GACrB,OACE,sBAAKC,GAAG,YAAR,UACE,uBAAOW,QAAQ,MAAf,wBACA,uBACEC,KAAK,OACLZ,GAAG,UACHa,MAAOd,EAAMe,SACbC,SAAUhB,EAAMiB,kB,IA2ETC,E,kDAnEb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,aAAc,GACdC,OAAQ,IAGV,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBAPT,E,iDAUd,SAAcC,GAAQ,IAAD,OACbC,EAAMD,EAAME,OAAOZ,MAEzBa,KAAKC,SAAS,CACZR,aAAcK,IAGE,IAAfA,EAAII,OACLC,MAAM,wCAAwCL,GAC3CM,MAAK,SAACC,GACL,OAAGA,EAASC,GACHD,EAASE,OAEV,MAIXH,MAAK,SAACI,GACL,IAAMd,EAASc,EAAaC,KAAI,SAACC,GAC/B,OAAO,cAACtC,EAAD,CAAMI,KAAMkC,GAAWA,EAAKC,iBAGrC,EAAKV,SAAS,CACZP,OAAQA,OAKZM,KAAKC,SAAS,CACZP,OAAQ,O,oBAMd,WACE,OACE,sBAAKnB,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACE,mDAEF,qBAAKD,GAAG,UAAR,SACE,sBAAKA,GAAG,eAAR,UACE,cAACU,EAAD,CACEI,SAAUY,KAAKR,MAAMJ,SACrBE,aAAcU,KAAKL,gBAEpBK,KAAKR,MAAME,OAAOQ,OAAS,EAAIF,KAAKR,MAAME,OAC3C,qBAAKpB,GAAG,OAAR,qC,GA3DMsC,aCtBHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SACjDX,M","file":"static/js/main.87c9a7fb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nfunction City(props) {\n  return (\n    <div id=\"zip_Info\">\n        <div id=\"info_Body\">\n        <h3 className=\"title\">{props.data.LocationText}</h3>\n        <ul class=\"no-bullets\">\n            <li>State: {props.data.State}</li>\n            <li>Location: ({props.data.Lat}, {props.data.Long})</li>\n            <li>Population (Estimated): {props.data.EstimatedPopulation}</li>\n            <li>Total Wages: {props.data.TotalWages}</li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nfunction ZipCodeSearch(props) {\n  return (\n    <div id=\"searchBar\">\n      <label htmlFor=\"zip\">Zip Code: </label>\n      <input\n        type=\"text\"\n        id=\"zipcode\"\n        value={props.zipValue}\n        onChange={props.handleChange}\n      />\n    </div>\n  );\n}\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      zipCodeValue: \"\",\n      cities: [],\n    }\n\n    this.zipCodeChange = this.zipCodeChange.bind(this);\n  }\n\n  zipCodeChange(event) {\n    const zip = event.target.value;\n\n    this.setState({\n      zipCodeValue: zip,\n    })\n\n    if(zip.length === 5) {\n      fetch('http://ctp-zip-api.herokuapp.com/zip/'+zip)\n        .then((response) => {\n          if(response.ok) {\n            return response.json();\n          } else {\n            return[];\n          }\n      })\n\n      .then((jsonResponse) => {\n        const cities = jsonResponse.map((city) => {\n          return <City data={city} key={city.RecordNumber} />;\n        });\n\n        this.setState({\n          cities: cities,\n        });\n      })\n\n    } else {\n      this.setState({\n        cities: [],\n      });\n    \n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <h2>Zip Code Search</h2>\n        </div>\n        <div id=\"display\">\n          <div id=\"display_Info\">\n            <ZipCodeSearch\n              zipValue={this.state.zipValue}\n              handleChange={this.zipCodeChange} \n            />\n            {this.state.cities.length > 0 ? this.state.cities :\n            <div id=\"null\"> No Results\n            </div>}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\nreportWebVitals();\n"],"sourceRoot":""}