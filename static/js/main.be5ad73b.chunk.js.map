{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["City","props","id","data","LocationText","class","Country","State","Lat","Long","EstimatedPopulation","TaxReturnsFiled","ZipCode","zip","ZipCodeSearch","label","type","value","zipValue","onChange","handleChange","App","state","zipCodeValue","cities","cityValue","zipcodes","zipCodeChange","bind","cityChange","event","target","this","setState","length","fetch","then","response","ok","json","jsonResponse","map","city","RecordNumber","toUpperCase","zipcode","className","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.be5ad73b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\n\r\n//city display object\r\nfunction City(props) {\r\n  return (\r\n    <div id=\"zip_Info\">\r\n        <div id=\"info_Body\">\r\n        <h3 id=\"Location\">{props.data.LocationText} </h3>\r\n          <ul class=\"no-bullets\">\r\n            <li>Country: {props.data.Country}</li>\r\n            <li>State: {props.data.State}</li>\r\n            <li>Location: ({props.data.Lat}, {props.data.Long})</li>\r\n            <li>Population (Estimated): {props.data.EstimatedPopulation}</li>\r\n            <li>Tax Returns Filled: {props.data.TaxReturnsFiled}</li>\r\n          </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n//zipcode display object\r\nfunction ZipCode(props){\r\n\treturn(\r\n\t<div id=\"zip_Info\"> \r\n\t\t<div id= \"zipinfo_Body\">\r\n\t\t\t<h3>{props.zip}</h3>\r\n\t\t</div>\r\n\t</div>\r\n\t);\r\n}\r\n\r\n//creates search bars\r\nfunction ZipCodeSearch(props) {\r\n  return (\r\n    <div id=\"searchBar\">\r\n\t<label> {props.label} </label>\r\n      <input\r\n        type = \"text\"\r\n        id = \"zipcode\"\r\n        value = {props.zipValue}\r\n        onChange = {props.handleChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      zipCodeValue: \"\",\r\n      cities: [],\r\n\t  cityValue: \"\", \r\n\t  zipcodes: [], \r\n    }\r\n\r\n    this.zipCodeChange = this.zipCodeChange.bind(this);\r\n\tthis.cityChange= this.cityChange.bind(this);\r\n  }\r\n\t\r\n\t//called on every character input of zipcode searchbar\r\n  zipCodeChange(event) {\r\n    let zip = event.target.value;\r\n\r\n    this.setState ({\r\n      zipCodeValue: zip,\r\n    })\r\n\r\n    if(zip.length === 5) {\r\n      fetch('http://ctp-zip-api.herokuapp.com/zip/' + zip)\r\n        .then((response) => {\r\n          if(response.ok) {\r\n            return response.json();\r\n          } \r\n          \r\n          else {\r\n            return[];\r\n          }\r\n      })\r\n\r\n      .then((jsonResponse) => {\r\n        let cities = jsonResponse.map((city) => {\r\n          return <City data={city} key={city.RecordNumber} />;\r\n        });\r\n\r\n        this.setState({\r\n          cities: cities,\r\n        });\r\n      })\r\n    } \r\n    \r\n    else {\r\n    this.setState ({\r\n      cities: [],\r\n    });\r\n    \r\n    }\r\n  }\r\n  //called on every character input of city search bar (making API requests on each character)\r\n\tcityChange(event) {\r\n    let city = event.target.value.toUpperCase();\r\n\r\n    this.setState ({\r\n      cityValue: city,\r\n    });\r\n\r\n      fetch('http://ctp-zip-api.herokuapp.com/city/' + city)\r\n        .then((response) => {\r\n          if(response.ok) {\r\n            return response.json();\r\n          } \r\n          \r\n          else {\r\n            return[];\r\n          }\r\n\t\t})\r\n   \r\n      .then((jsonResponse) => {\r\n        let zipcodes = jsonResponse.map((zipcode) => {\r\n          return <ZipCode zip={zipcode} />;\r\n        });\r\n\r\n        this.setState({\r\n          zipcodes:zipcodes,\r\n        });\r\n      })\r\n    } \r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"header\">\r\n          <h2>Zip Code Search</h2>\r\n        </div>\r\n        <div id=\"display\">\r\n          <div id=\"display_Info\">\r\n            <ZipCodeSearch\r\n              zipValue = {this.state.zipValue}\r\n              handleChange = {this.zipCodeChange} \r\n\t\t\t  label = {\"Zip Code: \"}\r\n            />\r\n            {this.state.cities.length > 0 ? this.state.cities :\r\n            <div id=\"null\"> No Results\r\n            </div>}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"header\">\r\n          <h2>City Search</h2>\r\n        </div>\r\n\t\t<div id=\"display\"> \r\n\t\t\t<div id=\"display_Info\">\r\n\t\t\t<ZipCodeSearch\r\n\t\t\tcityValue= {this.state.cityValue}\r\n\t\t\thandleChange= {this.cityChange}\r\n\t\t\tlabel = {\"City: \" }\r\n\t\t\t/>\r\n\t\t\t{this.state.zipcodes.length > 0 ? this.state.zipcodes : <div id = \"null\"> No Results </div>}\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n\t\t\t\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <App />, \r\n    document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}